name: Setup GHC
description: Downloads or restores GHC from the cache

inputs:
  ghc-version:
    description: 'GHC version to install/restore'
    required: true
  # preinstalled version of cabal is used

runs:
  using: composite
  steps:

  - name: Inspect
    shell: bash
    run: |
      ls -lA ~/ | grep .ghcup # we have ~/.ghcup -> /usr/local/.ghcup

      /usr/local/.ghcup/bin/cabal --version
      /usr/local/.ghcup/bin/cabal path

  # Because we cannot have `env` vars in composite action:
  - name: Define env-like vars
    id: vars
    shell: bash
    run: |
      echo "Current XDG paths:"
      echo "XDG_STATE_HOME: $XDG_STATE_HOME"
      echo "XDG_CONFIG_HOME: $XDG_CONFIG_HOME"
      echo "XDG_CACHE_HOME: $XDG_CACHE_HOME"

      ver="$(/usr/local/.ghcup/bin/cabal --version | head -n 1 | awk '{print $3}')"
      echo "cabal-version=$ver" >> "$GITHUB_OUTPUT"
      echo "cabal-version=$ver"
      # The dummy version MUST NOT be equal to the preinstalled version, otherwise Cabal is overridden (?) and
      # we cannot share the cache:
      echo "dummy-cabal-version=3.12" >> "$GITHUB_OUTPUT"
      echo "dummy-cabal-version=3.12"

  # FIXME: The cache is too large. Select necessary files in `lib/`.
  - name: Restore GHC ${{ inputs.ghc-version }}
    uses: actions/cache/restore@v4
    id: ghc-cache
    with:
      path: |
        ~/.ghcup/ghc/${{ inputs.ghc-version }}/bin
        ~/.ghcup/ghc/${{ inputs.ghc-version }}/lib/ghc-${{ inputs.ghc-version }}/bin
        ~/.ghcup/ghc/${{ inputs.ghc-version }}/lib/ghc-${{ inputs.ghc-version }}/lib
      key: _GHC_${{ runner.os }}-ghc-${{ inputs.ghc-version }}-cabal-${{ steps.vars.outputs.cabal-version }}

  - name: Setup GHC path on restore
    if: steps.ghc-cache.outputs.cache-hit == 'true'
    shell: bash
    run: |
      # setup PATH manually (since `haskell-actions/setup` is not run on cache hit)
      echo "$HOME/.ghcup/ghc/${{ inputs.ghc-version }}/bin" >> "$GITHUB_PATH"
      # TODO: Is this correct for doctest installation path?
      echo "$HOME/.cabal/bin" >> "$GITHUB_PATH"
      # inspect preinstalled versions of GHC and Cabal
      ghc --version
      cabal --version
      cabal path # the store path must be ~/.local/state/cabal/store

  # I don't want to install Cabal with haskell-actions@setup, so:
  - name: Pre downloading GHC ${{ inputs.ghc-version }}
    if: steps.ghc-cache.outputs.cache-hit != 'true'
    shell: bash
    run: mv /usr/local/.ghcup/bin/cabal{,-old}

  - name: Download GHC ${{ inputs.ghc-version }}
    uses: haskell-actions/setup@v2
    if: steps.ghc-cache.outputs.cache-hit != 'true'
    id: setup
    with:
      ghc-version: ${{ inputs.ghc-version }}
      cabal-version: ${{ steps.vars.outputs.dummy-cabal-version }}

  - name: Post downloading GHC ${{ inputs.ghc-version }}
    if: steps.ghc-cache.outputs.cache-hit != 'true'
    shell: bash
    run: |
      mv /usr/local/.ghcup/bin/cabal{-old,}

      # haskell-actions/setup@v2 intentinally sets non-XDG mode, however, let's disable that behavior
      ls -lA ~/.cabal
      rm -rf ~/.cabal
      rm ~/.config/cabal/config # the last line (`store-dir: /home/runner/.cabal/store`) is created by the setup action

  - name: Inspect
    shell: bash
    run: |
      # ls -lA ~/          # ~/.ghcup -> /usr/local/.ghcup
      which ghc
      ghc --version
      which cabal
      cabal --version
      cabal path # make sure the cabal store points to `~/.local/state/cabal/store`

  - name: Save GHC cache
    uses: actions/cache/save@v4
    if: steps.ghc-cache.outputs.cache-hit != 'true'
    with:
      # It contains unnecessary files though
      path: |
        ~/.ghcup/ghc/${{ inputs.ghc-version }}/bin
        ~/.ghcup/ghc/${{ inputs.ghc-version }}/lib/ghc-${{ inputs.ghc-version }}/bin
        ~/.ghcup/ghc/${{ inputs.ghc-version }}/lib/ghc-${{ inputs.ghc-version }}/lib
      key: ${{ steps.ghc-cache.outputs.cache-primary-key }}
