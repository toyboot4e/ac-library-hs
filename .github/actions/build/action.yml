name: Build
description: Builds or restores the dependencies and the library from the cache

runs:
  using: composite
  steps:
  # Because we cannot have `env` vars in composite action:
  - name: Define env-like vars
    id: vars
    shell: bash
    run: |
      ver="$(/usr/local/.ghcup/bin/cabal --version | head -n 1 | awk '{print $3}')"
      echo "cabal-version=$ver" >> "$GITHUB_OUTPUT"
      echo "cabal-version=$ver"
      echo "store-path=~/.local/state/cabal/store" >> "$GITHUB_OUTPUT"
      echo "store-path=~/.local/state/cabal/store"
      # echo "store-path=~/.cabal/store" >> "$GITHUB_OUTPUT"
      # echo "store-path=~/.cabal/store"

  - name: Configure the build
    shell: bash
    run: |
      cabal update
      cabal configure --enable-tests --enable-benchmarks --disable-documentation
      cabal build all --dry-run
      # The last step generates dist-newstyle/cache/plan.json for the cache key.

  - name: Restore cached dependencies
    uses: actions/cache/restore@v4
    id: deps-cache
    env:
      key: ${{ runner.os }}-ghc-${{ matrix.ghc-version }}-cabal-${{ steps.vars.outputs.cabal-version }}
    with:
      path: ${{ steps.vars.outputs.store-path }}
      key: dist-${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
      restore-keys: dist-${{ env.key }}-

  - name: Install dependencies
    # If we had an exact cache hit, the dependencies will be up to date.
    if: steps.deps-cache.outputs.cache-hit != 'true'
    shell: bash
    run: cabal build all --only-dependencies

  - name: Save dependency cache
    uses: actions/cache/save@v4
    # If we had an exact cache hit, trying to save the cache would error because of key clash.
    if: steps.deps-cache.outputs.cache-hit != 'true'
    with:
      path: ${{ steps.vars.outputs.store-path }}
      key: ${{ steps.deps-cache.outputs.cache-primary-key }}

  # TODO: Maybe clear the cache if it got too fat
  - name: Restore cached ac-lbrary-hs
    uses: actions/cache/restore@v4
    id: lib-cache
    env:
      key: ${{ runner.os }}-ghc-${{ matrix.ghc-version }}-cabal-${{ steps.vars.outputs.cabal-version }}
    with:
      path: dist-newstyle
      key: ac-library-hs-${{ env.key }}-plan-${{ hashFiles('src/**/*.hs') }}
      restore-keys: ac-library-hs-${{ env.key }}-

  - name: Build the dependencies (if necessary) and ac-library-hs
    shell: bash
    run: |
      cabal build lib:ac-library-hs

  - name: Save cached ac-library-hs
    uses: actions/cache/save@v4
    env:
      key: ${{ runner.os }}-ghc-${{ matrix.ghc-version }}-cabal-${{ steps.vars.outputs.cabal-version }}
    with:
      path: dist-newstyle
      key: ac-library-hs-${{ env.key }}-plan-${{ hashFiles('src/**/*.hs') }}
      restore-keys: ac-library-hs-${{ env.key }}-
